@{
    ViewData["Title"] = "Sipariş Oluştur";
    Layout = null;
}

    <div class="container py-4">
        <div class="card shadow mb-4">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h2 class="h4 mb-0">Siparişinizi Onaylayın</h2>
                <span class="badge bg-light text-dark fs-6">Masa: @ViewData["TableNumber"]</span>
            </div>
            <div class="card-body">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <div asp-validation-summary="All" class="text-danger"></div>
                    </div>
                }

                <form id="orderForm" method="post" action="/Views/Order/Create">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="TableId" name="TableId" value="@ViewData["TableId"]" />
                    <input type="hidden" id="CartJson" name="CartJson" value="" />

                    <div class="mb-3">
                        <label for="CustomerName" class="form-label">Ad (isteğe bağlı)</label>
                        <input type="text" class="form-control" id="CustomerName" name="CustomerName" />
                    </div>
                    <div class="mb-3">
                        <label for="CustomerNote" class="form-label">Notunuz (isteğe bağlı)</label>
                        <textarea class="form-control" id="CustomerNote" name="CustomerNote" rows="2"></textarea>
                    </div>
                    <div id="cartSummary" class="mb-4"></div>
                    <div id="errorMessage" class="alert alert-danger d-none"></div>
                    <div class="d-grid gap-2">
                        <button type="submit" id="submitBtn" class="btn btn-success btn-lg">Siparişi Gönder</button>
                        <a href="javascript:history.back()" class="btn btn-secondary">Geri</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Masa bilgilerini alıyoruz
            const tableIdFromView = "@ViewData["TableId"]";
            const tableNumberFromView = "@ViewData["TableNumber"]";
            const tableNameFromView = "@ViewData["TableName"]";

            // URL veya localStorage'den alınan masa ID
            let tableId = tableIdFromView ||
                          new URLSearchParams(window.location.search).get('tableId') ||
                          localStorage.getItem('tableId') ||
                          '';

            // localStorage'a tableId kaydedelim
            if (tableId && !localStorage.getItem('tableId')) {
                localStorage.setItem('tableId', tableId);
            }

            // Masa bilgisini form alanına ekliyoruz
            document.getElementById('TableId').value = tableId;

            // Masa bilgisi kontrolü
            if (!tableId) {
                showError("Masa bilgisi bulunamadı! Lütfen QR kodu tekrar okutun.");
                document.getElementById('submitBtn').disabled = true;
            } else {
                console.log("Masa ID: " + tableId + (tableNumberFromView ? ", Masa No: " + tableNumberFromView : ""));
            }

            // Sepeti yükle
            let cart = [];
            try {
                cart = JSON.parse(localStorage.getItem('cart') || '[]');

                if (cart.length === 0) {
                    showError("Sepetiniz boş! Lütfen önce ürün ekleyin.");
                    document.getElementById('submitBtn').disabled = true;
                } else {
                    // Sepet içeriğini form alanına ekliyoruz
                    document.getElementById('CartJson').value = JSON.stringify(cart);

                    // Sepet özetini gösteriyoruz
                    renderCartSummary(cart);
                }
            } catch (error) {
                console.error("Sepet yüklenirken hata:", error);
                showError("Sepet verisi yüklenemedi: " + error.message);
                document.getElementById('submitBtn').disabled = true;
            }

            // Form gönderim olayı
            document.getElementById('orderForm').addEventListener('submit', function(e) {
                // Önce formu durdur
                e.preventDefault();

                // Son kontroller
                if (cart.length === 0) {
                    showError("Sepetiniz boş!");
                    return false;
                }

                if (!tableId) {
                    showError("Masa bilgisi eksik!");
                    return false;
                }

                // Form verilerini logla
                console.log("Form verisi:", {
                    TableId: document.getElementById('TableId').value,
                    CartJson: document.getElementById('CartJson').value,
                    CustomerName: document.getElementById('CustomerName').value,
                    CustomerNote: document.getElementById('CustomerNote').value
                });

                // Sepeti temizle ve formu gönder
                localStorage.removeItem('cart');
                this.submit();
            });
        });

        // Sepet özetini oluşturma
        function renderCartSummary(cart) {
            let html = `
                <div class="card mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Sipariş Özeti</h5>
                    </div>
                    <div class="card-body p-0">
                        <ul class='list-group list-group-flush'>`;

            let total = 0;
            cart.forEach(function(item) {
                let itemTotal = item.price * item.quantity;
                total += itemTotal;

                html += `
                    <li class='list-group-item d-flex justify-content-between align-items-center'>
                        <div>
                            <strong>${item.name}</strong><br>
                            <small class="text-muted">${item.price.toFixed(2)}₺ x ${item.quantity}</small>
                        </div>
                        <span class="text-nowrap">${itemTotal.toFixed(2)}₺</span>
                    </li>`;
            });

            html += `
                        </ul>
                    </div>
                    <div class="card-footer text-end">
                        <strong>Toplam: ${total.toFixed(2)}₺</strong>
                    </div>
                </div>`;

            document.getElementById('cartSummary').innerHTML = html;
        }

        // Hata mesajı gösterme
        function showError(message) {
            const errorElement = document.getElementById('errorMessage');
            errorElement.innerText = message;
            errorElement.classList.remove('d-none');
            setTimeout(() => {
                errorElement.classList.add('d-none');
            }, 8000); // 8 saniye sonra hata mesajı kaybolur
        }
    </script>