﻿
@model RestaurantQRSystem.ViewModels.OrderViewModel;

@{
    ViewData["Title"] = "Sipariş Oluştur";
    Layout = "_Layout"; // veya null; kullanacağınız layout'a göre
}

<div class="container py-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="h5 mb-0">Siparişinizi Onaylayın</h2>
            <span class="badge bg-light text-dark">Masa: @ViewData["Table"]</span>
        </div>
        <div class="card-body">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <form id="orderForm" method="post" asp-action="Create" asp-controller="Order">
                <input type="hidden" asp-for="TableId" value="@ViewData["TableId"]" />
                <input type="hidden" asp-for="CartJson" id="CartJson" />

                <div class="mb-3">
                    <label asp-for="CustomerName" class="form-label">Adınız (isteğe bağlı)</label>
                    <input asp-for="CustomerName" class="form-control" placeholder="Adınızı girin" />
                </div>

                <div class="mb-3">
                    <label asp-for="CustomerNote" class="form-label">Sipariş Notunuz (isteğe bağlı)</label>
                    <textarea asp-for="CustomerNote" class="form-control" rows="2" placeholder="Özel isteklerinizi belirtin"></textarea>
                </div>

                <div id="orderSummaryContainer" class="mb-4">
                    <h5 class="mb-3">Sipariş Özeti</h5>
                    <div id="cartSummary" class="card p-3">
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Yükleniyor...</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" id="submitBtn" class="btn btn-success btn-lg">Siparişi Gönder</button>
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">Geri</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            console.log("Order form initialized");

            // Masa bilgilerini kontrol ediyoruz
            const tableId = @Html.Raw(ViewData["TableId"]);
            const tableName = "@ViewData["TableName"]";
            

            console.log("Table Info:", { tableId, tableName });

            if (!tableId) {
                alert("Masa bilgisi bulunamadı! Lütfen QR kodu tekrar okutun.2");
                $("#submitBtn").prop("disabled", true);
                return;
            }

            // Sepeti localStorage'dan alıyoruz
            let cart = [];
            try {
                cart = JSON.parse(localStorage.getItem('cart') || '[]');
                console.log("Cart loaded:", cart);

                if (cart.length === 0) {
                    $("#cartSummary").html(`
                        <div class="alert alert-warning">
                            Sepetinizde ürün bulunmuyor. <a href="/Menu?tableId=${tableId}">Menüye dönün</a> ve ürün ekleyin.
                        </div>
                    `);
                    $("#submitBtn").prop("disabled", true);
                    return;
                }

                // Cart içeriğini gösteriyoruz
                renderCartSummary(cart);

                // Hidden input'a cart JSON'ını yerleştiriyoruz
                $("#CartJson").val(JSON.stringify(cart));

            } catch (error) {
                console.error("Error loading cart:", error);
                $("#cartSummary").html(`
                    <div class="alert alert-danger">
                        Sepet veriniz yüklenirken bir hata oluştu. Lütfen sayfayı yenileyin veya tekrar deneyin.
                    </div>
                `);
                $("#submitBtn").prop("disabled", true);
                return;
            }

            // Form gönderilirken son kontrolleri yapıyoruz
            $("#orderForm").on("submit", function(e) {
                // Form gönderimini geçici olarak durduruyoruz
                e.preventDefault();

                // Son kontroller
                if (cart.length === 0) {
                    alert("Sepetiniz boş! Lütfen ürün ekleyin.");
                    return false;
                }

                if (!tableId) {
                    alert("Masa bilgisi eksik! Lütfen QR kodu tekrar okutun.");
                    return false;
                }

                // Form içeriğini log'luyoruz (debug için)
                console.log("Submitting order with:", {
                    TableId: $("#TableId").val(),
                    CartJson: $("#CartJson").val(),
                    CustomerName: $("#CustomerName").val(),
                    CustomerNote: $("#CustomerNote").val()
                });

                // Sepeti temizleyip formu gönderiyoruz
                localStorage.removeItem('cart');
                this.submit();
            });
        });

        // Sepet özetini gösterme fonksiyonu
        function renderCartSummary(cart) {
            let tableHtml = `
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Ürün</th>
                                <th class="text-center">Adet</th>
                                <th class="text-end">Fiyat</th>
                            </tr>
                        </thead>
                        <tbody>
            `;

            let total = 0;

            cart.forEach(item => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;

                tableHtml += `
                    <tr>
                        <td>${item.name}</td>
                        <td class="text-center">${item.quantity}</td>
                        <td class="text-end">${itemTotal.toFixed(2)}₺</td>
                    </tr>
                `;
            });

            tableHtml += `
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="2" class="text-end">Toplam:</th>
                                <th class="text-end">${total.toFixed(2)}₺</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            `;

            $("#cartSummary").html(tableHtml);
        }
    </script>
}