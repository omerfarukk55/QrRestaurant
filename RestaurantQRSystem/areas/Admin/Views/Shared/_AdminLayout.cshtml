<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin Panel</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
</head>
<body>
    <!-- Navbar başlangıcı -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4">
        <div class="container-fluid">
            <a class="navbar-brand" href="/Admin/Dashboard">Admin Paneli</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#adminNavbar" aria-controls="adminNavbar" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="adminNavbar">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/Admin/Category">Kategoriler</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Admin/Product">Ürünler</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Admin/Order">Siparişler</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Admin/Table">Masalar</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Admin/Report">Raporlar</a>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link text-danger" href="../../">Çıkış Yap</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Navbar bitişi -->

    <!-- Bildirim kutusu ve navbar burada olabilir -->
    <!-- Bildirim kutusu başlangıcı -->
    <li class="nav-item dropdown">
        <a class="nav-link position-relative" href="#" id="notifDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-bell"></i>
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="notifBadge" style="display:none;">0</span>
        </a>
        <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="notifDropdown" id="notifList" style="min-width:290px;">
            <li class="dropdown-header fw-bold">Bildirimler</li>
            <li><span class="dropdown-item small text-muted">Bildirim yok.</span></li>
            <li><hr class="dropdown-divider" /></li>
            <li>
                <button onclick="clearNotifications()" class="dropdown-item text-danger">Bildirimleri Temizle</button>
            </li>
        </ul>
    </li>
    <!-- Toast/Alert Tarzı Bildirim Kutusu -->
    <div class="position-fixed top-0 end-0 p-3" style="z-index:1060;">
        <div id="orderNotificationBox"></div>
    </div>
    <!-- Bildirim kutusu bitişi -->

    <div class="container-fluid p-4">
        @RenderBody()
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        // Bildirim geçmişi
        const notificationList = [];

        // Dinamik menü güncelle
        function updateNotificationMenu() {
            const badge = document.getElementById('notifBadge');
            const list = document.getElementById('notifList');
            if (badge) {
                badge.textContent = notificationList.length;
                badge.style.display = notificationList.length > 0 ? 'inline-block' : 'none';
            }
            if (list) {
                list.innerHTML = '<li class="dropdown-header fw-bold">Bildirimler</li>';
                if (notificationList.length === 0) {
                    list.innerHTML += '<li><span class="dropdown-item small text-muted">Bildirim yok.</span></li>';
                } else {
                    notificationList.slice(0,10).forEach(item => {
                        list.innerHTML += `
                            <li>
                              <span class="dropdown-item small">
                                <b>${item.tableName}</b> #${item.orderId}
                                <br>Toplam: ${item.total}₺<br>
                                <span class="text-muted small">${item.time}</span>
                              </span>
                            </li><hr class="my-1"/>
                        `;
                    });
                }
                list.innerHTML += `<li><hr class="dropdown-divider"/></li>
                  <li><button onclick="clearNotifications()" class="dropdown-item text-danger">Bildirimleri Temizle</button></li>`;
            }
        }

        // Temizle fonksiyonu
        function clearNotifications() {
            notificationList.length = 0;
            updateNotificationMenu();
        }

        // Yeni sipariş bildirimi gösterme
        function showOrderNotification(messageObj) {
            // Toast/alert kutusu
            const notifDiv = document.createElement('div');
            notifDiv.className = 'alert alert-success alert-dismissible fade show mb-2 shadow';
            notifDiv.innerHTML = `
                <strong>Yeni Sipariş!</strong><br/>
                Masa: <b>${messageObj.tableName}</b><br/>
                Toplam: <b>${messageObj.total}₺</b> <span class="ms-2 small text-muted">#${messageObj.orderId}</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.getElementById('orderNotificationBox').prepend(notifDiv);

            // Bildirim listesine ekle (menu için)
            notificationList.unshift({
                time: new Date().toLocaleTimeString(),
                ...messageObj
            });
            updateNotificationMenu();

            // Sesli uyarı (isteğe bağlı, uygun bir mp3 dosyası olmalı)
            if (window.Audio) {
                let audio = new Audio("/ses/havaliman_anons.mp3");
                audio.play();
            }
            // Otomatik kaybolsun
            setTimeout(() => notifDiv.classList.remove('show'), 8000);
            setTimeout(() => notifDiv.remove(), 10000);
        }

        // SignalR ile bağlantı ve listener
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/orderHub")
            .build();

        connection.on("ReceiveOrder", showOrderNotification);
        connection.start().catch(err => console.error(err));
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>